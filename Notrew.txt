Robpot was too hard
So I instead opted for this method
that would etxratc infor fro m a excel or something and tyhen it would turn into questions and dots etc



WANT
identify headings, lists, paragraphs, IMPROTANT KEYWORDS
AND ADD FORMATING
<!DOCTYPE html>
<html lang="en">
<!-- I have all the dependencies downloaded i Just use the digital ones for submission so it will work regardless of what environment it is run on-->

<head>
    <meta charset="UTF-8">
    <title>Vue + Bootstrap Template</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="author" content="Joanne Woltanski/Davis">
    <!--In middle of name change-->
    <!-- VueJS  auto
       <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
    -->

    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js"></script>
    <!----Vuetify-->
    <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/@mdi/font@4.x/css/materialdesignicons.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.min.css" rel="stylesheet">
    <!-- Bootstrap 5 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .formatted-box {
            background-color: white;
            border-radius: 0.75rem;
            padding: 1.5rem;
        }
    </style>
    <!-- Bootstrap 4.4.1 CSS
     <s
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.4.1/dist/css/bootstrap.min.css"> -->
</head>

<!--https://www.textconverter.net/-->

<body>
    <div id="app" class="container mt-5 flex min-h-screen border">
        <!--
        <header>
            <DIV CLASS 
            the stuff
        </headER>
        DO A HEADER ELEMENT HERE-->
        <h1 class="mb-4 bg-warning rounded p-3">AutoFormate</h1>
        <!-- Vue app content IN HERE -->


        <div class="row justify-content-center">
            <div class="col-12 col-md-10 col-lg-8">
                <div class="card p-2 mb-4 bg-danger">
                    <label for="infoInput" class="text-white display-5 p-3">Input:</label>
                    <textarea id="infoInput" v-model="noteText" type="text" class="form-control mb-3" rows="8" placeholder="Bingle Bangle Lippity Too Lippity Tad"></textarea>
                    <button type="submit" class="btn bg-light" @click="formatText">Auto</button>
                </div>
                <div class="card 0-4" v-if="formattedTextOutput">
                    <!--formattedTextOutput-->
                    <h3 class="mb-3 text-secondary">Formatted Output:</h3>
                    <div class="formatted-box" v-html="formatText"></div>
                </div>
            </div>
        </div>
        <!-- Example Temp Vue binding 
        <label for="nameInput " class="form-label ">Enter a name:</label>
                <input id="nameInput " type="text " v-model="name " class="form-control mb-3 ">
                <p v-if="name ">Hello, {{ name }}!</p>-->
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js "></script>
    <script src="https://cdn.jsdelivr.net/npm/vuetify@2.x/dist/vuetify.js "></script>

    <script src="app.js"></script>
    <!-- Vue App Logic -->

</body>






























new Vue({ //WARNING I like to refer to myself in comments as numerous pronouns as it seperates me from the code 
    el: '#app',
    vuetify: new Vuetify(),

    data: function() {
        return {
            noteText: '',
            formattedTextOutput: '',
            lines: ''
        }

    },
    mounted() { //RUN AFTER VUE COMP IS IN DOMMY BOI

    },

    methods: {
        formatText() {
            let text = this.noteText || ''; // avoid null
            const lines = this.noteText.split("\n");
            let formattedParts = [];
            lines.forEach((line) => {
                let trimmed = line.trim();
            })

            this.formattedTextOutput = `<p>${text}</p>`;

        },







    }
});










dE
</html>













DECIED TO RESTART AND NOT DO THE ROBOIT

was not good enough

the auto forma t and note taker is way more itnresting and is more effective
ASWELL as cool on a protifolio











WHAT I WANT

THE OPTION TO PASTE TEXT
UPLOAD 
PDF DOC, or MAYBVE EXCELLL IF HAVE TIME


EXTRACT KEYWORDS

INTELLGIENT SUMMARISIAITON AND NTOES

AND AUTO FORMATTING



AI LOGIC
eyword Extraction Algorithm
Summarization
Output should rewrite sentences simply, not just truncate text.





optional
Highlight keywords in text automatically
allow export of notes as pdf or copy test




Decomposition




expeiremnted with 
https://bootstrap-vue.org/docs/directives/toggle/
aka b-v 

but found that its easier to just use vue and apply bootstrap interally
